// this proto is dumped by c2t-r
syntax = "proto3";

package protos;

import "PacketsGame.proto";

message DBConsume {
  uint32 type = 1;
  sint32 param0 = 2;
  sint32 param1 = 3;
  uint32 expired_at = 4;
}

message DBConsumes {
  repeated protos.DBConsume consumes = 1;
}

message DBSimpleTreasure {
  uint32 type = 1;
  sint32 param0 = 2;
  sint32 param1 = 3;
}

message DBTreasure {
  uint32 id = 1;
  protos.DBTreasure.Data data = 2;
  bool is_get = 3;
  bool is_chest = 4;
  protos.DBTreasure.Chest chest = 5;
  bytes result_data = 6;
  uint32 tag = 8;
  message Chest {
    repeated protos.DBTreasure treasures = 1;
  }
  message Data {
    uint32 type = 1;
    sint32 param0 = 2;
    sint32 param1 = 3;
    string sparam = 4;
    bool disabled = 5;
    repeated uint32 unit_ids = 7;
    bytes pd_data = 8;
    uint32 unit_id = 9;
    sint32 from = 10;
    sint32 to = 11;
  }
}

message DBTreasurePackage {
  uint32 id = 1;
  repeated protos.DBTreasure treasures = 2;
}

message DBUnit {
  protos.db_character_unit data = 1;
  repeated uint32 new_skill_ids = 2;
}

message DBSmithy {
  protos.db_character_smithy data = 1;
  repeated protos.db_character_smithy_seat seats = 2;
  repeated uint32 permanent_ids = 3;
  repeated uint32 process_ids = 4;
  repeated uint32 plan_ids = 5;
}

message DBSmithyForgeResult {
  bool is_upgrade = 1;
  bool is_no_cost = 2;
  repeated protos.db_character_weapon weapons = 3;
  protos.DBConsume consume_return = 4;
}

message DBEntrustBattle {
  protos.db_character_entrust_battle data = 1;
}

message DBEntrustPractice {
  protos.db_character_entrust_practice data = 1;
}

message DBChangedUnit {
  uint32 id = 1;
  sint32 changed_exp = 2;
  sint32 changed_morale = 3;
  sint32 old_exp = 4;
  sint32 old_morale = 5;
  uint32 old_level = 6;
  sint32 exp = 7;
  sint32 morale = 8;
  uint32 level = 9;
  protos.db_character_unit unit = 10;
  uint32 add_unit_skill_id = 11;
}

message SandboxSimpleUnit {
  uint32 id = 1;
  protos.db_character_unit.STATUS status = 2;
  sint32 morale = 3;
  string blessing_effect_ids = 4;
}

message SandboxChangeValues {
  repeated protos.SandboxChangeValues.ChangeValue data = 1;
  message ChangeValue {
    uint32 type = 1;
    uint32 id = 2;
    int32 from = 3;
    int32 to = 4;
    repeated uint32 ids = 5;
  }
}

message DBTraining {
  protos.db_character_training data = 1;
  repeated protos.db_character_training_seat seats = 2;
  repeated uint32 faction_skill_ids = 3;
}

message SandboxMilestoneAction {
  uint32 id = 1;
  protos.SandboxMilestoneAction.Status status = 2;
  int32 old_value = 3;
  int32 value = 4;
  protos.DBTreasurePackage treasure_package = 5;
  enum Status {
    Open = 0;
    Finished = 1;
    Failure = 2;
    Stop = 3;
    Change = 4;
  }
}

message SandboxMilestoneActionQueue {
  repeated protos.SandboxMilestoneAction queue = 1;
}

message SandboxEvent {
  uint32 id = 1;
  repeated protos.SandboxEvent.Option options = 2;
  uint32 current_option_id = 3;
  uint32 current_result_id = 4;
  protos.SandboxEvent.Battle battle = 7;
  uint32 next_event_id = 8;
  protos.SandboxEvent.MapParams map_params = 9;
  uint32 note_id = 10;
  message Option {
    uint32 id = 1;
    protos.SandboxEvent.Option.Status status = 2;
    enum Status {
      None = 0;
      Visible = 1;
      Selectable = 2;
    }
  }
  message Battle {
    uint32 mission_battle_param_id = 1;
    uint32 result_id = 2;
  }
  message MapParams {
    uint32 block_id = 1;
    uint32 position_id = 2;
    repeated uint32 block_ids = 3;
  }
}

message SandboxCustomEventParam {
  bool is_stop = 1;
  bool is_refreshed = 2;
  bool refresh_now = 3;
}

message SandboxConsume {
  uint32 treasure_type = 1;
  uint32 id = 2;
  sint32 quantity = 3;
}

message SandboxRoundReport {
  sint32 round = 1;
  repeated protos.SandboxRoundReport.Type types = 2;
  message Entry {
    uint32 id = 1;
    repeated string params = 2;
  }
  message Type {
    uint32 id = 1;
    repeated protos.SandboxRoundReport.Entry entries = 2;
  }
}

message SandboxEventBattleParam {
  uint32 battle_param_id = 1;
}

message SandboxStatistic {
  uint32 battle_count = 1;
  uint32 battle_kill_count = 2;
  uint32 battle_death_count = 3;
  uint32 fate_power_used_count = 4;
  uint32 commerce_order_count = 5;
  uint32 commerce_money_count = 6;
}

message Elysium {
  repeated protos.CapitalSpawn spawns = 1;
}

message Capital {
  repeated protos.CapitalSpawn spawns = 1;
}

message CapitalEvent {
  uint32 index = 1;
  string name = 2;
  uint32 area_id = 3;
  protos.CapitalEvent.Type type = 4;
  repeated protos.CapitalEvent.Npc npcs = 5;
  protos.CapitalSecondaryPerform secondary_perform = 6;
  uint32 setting_group_id = 7;
  message Npc {
    uint32 template_id = 1;
    uint32 form = 2;
    uint32 spawn_index = 3;
    string spawn_anim = 4;
    uint32 spawn_facing = 5;
    repeated protos.CapitalNpcBehavioralSequence behavioral_sequences = 6;
    protos.CapitalEvent.Npc.Position talk_position = 7;
    message Position {
      float x = 1;
      float y = 2;
      float z = 3;
    }
  }
  enum Type {
    Resident = 0;
    Order = 1;
    SecondaryPerform = 2;
    SettingGroup = 3;
    OrderBubble = 4;
  }
}

message CapitalSpawn {
  uint32 index = 1;
  string name = 2;
  uint32 area_id = 3;
  protos.CapitalSpawn.Position position = 4;
  uint32 facing = 5;
  protos.CapitalSpawn.Position talk_position = 6;
  protos.CapitalSpawn.Type type = 7;
  uint32 bubble_facing = 8;
  protos.CapitalSpawn.Position gamepad_collision = 9;
  message Position {
    float x = 1;
    float y = 2;
    float z = 3;
  }
  enum Type {
    Resident = 0;
    Order = 1;
    OrderRandom = 2;
    Normal = 3;
    ElysiumPerform = 4;
    ElysiumPerformRandom = 5;
    ElysiumPutPoint = 6;
  }
}

message CapitalSecondaryPerform {
  uint32 trigger_npc_id = 1;
  protos.CapitalSecondaryPerform.Size trigger_size = 2;
  repeated protos.SecondaryPerformAction actions = 3;
  protos.CapitalSecondaryPerform.TriggerLimitType trigger_limit_type = 4;
  message Size {
    float x = 1;
    float z = 2;
  }
  enum TriggerLimitType {
    OnceInArea = 0;
    OncePerRound = 1;
  }
}

message SecondaryPerformAction {
  protos.SecondaryPerformAction.Type type = 1;
  string sparam = 2;
  uint32 index = 3;
  enum Type {
    Dialogue = 0;
    Act = 1;
    Move = 2;
  }
}

message CapitalNpcBehavior {
  uint32 index = 1;
  protos.CapitalNpcBehavior.Type type = 2;
  sint32 go_to = 3;
  uint32 go_to_limit = 4;
  string sparam = 5;
  enum Type {
    Idle = 0;
    Move = 1;
    Disappear = 2;
  }
}

message CapitalNpcBehavioralSequence {
  protos.CapitalNpcBehavioralSequence.TriggerType trigger_type = 1;
  protos.CapitalNpcBehavioralSequence.Size trigger_size = 2;
  repeated protos.CapitalNpcBehavior behaviors = 3;
  uint32 delay = 4;
  uint32 index = 5;
  string name = 6;
  uint32 form = 7;
  message Size {
    float x = 1;
    float z = 2;
  }
  enum TriggerType {
    SameArea = 0;
    Cube = 1;
  }
}

message CharacterRoundInfo {
  protos.SandboxRoundReport report = 1;
  repeated protos.CharacterRoundInfo.HospitalSeat hospital_seats = 2;
  repeated protos.CharacterRoundInfo.TrainingSeat training_seats = 3;
  repeated protos.CharacterRoundInfo.SmithySeat smithy_seats = 4;
  repeated protos.CharacterRoundInfo.EntrustPractice entrust_practices = 5;
  repeated protos.SandboxSimpleUnit simple_units = 6;
  repeated protos.db_character_tactics_skill tactics_skills = 7;
  repeated protos.db_character_blessing_seat blessing_seats = 8;
  repeated protos.db_character_commerce_order orders = 9;
  message HospitalSeat {
    uint32 seat_id = 1;
    protos.DBChangedUnit changed_unit = 2;
  }
  message TrainingSeat {
    protos.db_character_training_seat seat = 1;
    protos.DBChangedUnit changed_unit = 2;
  }
  message SmithySeat {
    protos.db_character_smithy_seat seat = 1;
    protos.DBTreasurePackage treasure = 2;
    protos.db_character_weapon weapon = 3;
  }
  message EntrustPractice {
    protos.db_character_entrust_practice practice = 1;
    protos.DBTreasurePackage treasure_package = 2;
    repeated protos.DBChangedUnit changed_units = 3;
    protos.CharacterRoundInfo.EntrustPractice.changed_character_exp changed_exp = 4;
    bool republish = 5;
    message changed_character_exp {
      sint32 old_exp = 1;
      uint32 old_level = 2;
      sint32 exp = 3;
      uint32 level = 4;
      sint32 changed_exp = 5;
    }
  }
}

message ShopData {
  repeated protos.ShopData.SaleItem sale_items = 1;
  sint32 carry_money = 2;
  message Treasure {
    uint32 type = 1;
    sint32 param0 = 2;
    sint32 param1 = 3;
  }
  message SaleItem {
    uint32 id = 1;
    protos.ShopData.Treasure item = 2;
    protos.DBConsume consume = 3;
    sint32 quantity = 4;
    bool is_get = 5;
  }
}

message DBWorkshop {
  protos.db_character_workshop workshop = 1;
  repeated protos.db_character_workshop_node nodes = 2;
  repeated protos.db_character_workshop_quest quests = 3;
  repeated uint32 new_node_ids = 4;
}

message DBBlessingRevelationData {
  uint32 unit_id = 1;
  uint32 effect_id = 2;
}

message DBBlessing {
  protos.db_character_blessing blessing = 1;
  repeated protos.db_character_blessing_seat seats = 2;
  repeated protos.db_character_blessing_halidom halidoms = 3;
}

message DBCommerce {
  protos.db_character_commerce commerce = 1;
  repeated protos.db_character_commerce_order orders = 2;
  repeated protos.db_character_commerce_trade_point trade_point = 3;
}

message PlayerSandboxLaunchStatus {
  protos.PlayerSandboxLaunchStatus.Phase phase = 1;
  uint32 sandbox_preface_id = 2;
  uint32 token_id = 3;
  repeated uint32 role_unit_ids = 4;
  repeated uint32 minor_arcana_ids = 5;
  repeated uint32 chapter_history_ids = 6;
  repeated uint32 debug_speciality_ids = 8;
  uint32 ep = 9;
  bool has_consume_ticket = 11;
  repeated uint32 random_major_arcana_ids = 12;
  uint32 selected_major_arcana_id = 13;
  protos.DBTreasurePackage result_tp = 14;
  bool is_givp_up = 15;
  protos.DBTreasurePackage init_tp = 16;
  enum Phase {
    None = 0;
    PlayPreface = 1;
    SelectToken = 2;
    BringMinorArcanas = 3;
    BringUnits = 4;
    Divination = 5;
    SandboxStart = 6;
  }
}

message DBPlayerSandboxRecord {
  uint32 sandbox_ending_id = 1;
  uint32 sandbox_ending_quote_id = 2;
  repeated uint32 minor_arcana_ids = 3;
  repeated uint32 role_unit_ids = 4;
  uint32 token_id = 5;
  repeated protos.DBPlayerSandboxRecord.UnitDisplayed units_displayed = 6;
  repeated uint32 chapter_history_ids = 7;
  repeated protos.DBPlayerSandboxRecord.SandboxAchievement achievements = 8;
  protos.DBTreasurePackage tp = 9;
  bool is_give_up = 10;
  protos.SandboxStatistic statistic = 11;
  uint32 round_count = 12;
  uint32 tactics_skill_count = 13;
  uint32 character_title = 14;
  uint32 level = 15;
  uint32 chapter_result_count = 16;
  uint32 commerce_grading_id = 17;
  bool character_reputation_use_commerce_grading_value = 18;
  message UnitDisplayed {
    uint32 role_id = 1;
    uint32 unit_id = 2;
  }
  message UnitDisplayedWithScore {
    protos.DBPlayerSandboxRecord.UnitDisplayed unit_info = 1;
    int32 score = 2;
  }
  message SandboxAchievement {
    uint32 achievement_id = 1;
    bool is_new = 2;
  }
}
