// this proto is dumped by c2t-r
syntax = "proto3";

package protos;

import "PacketsSandbox2.gen.proto";
import "PacketsCommon.proto";

message NewSandboxEvent {
  uint32 id = 1;
  repeated protos.NewSandboxEvent.Option options = 2;
  uint32 current_option_id = 3;
  uint32 current_result_id = 4;
  protos.NewSandboxEvent.Battle battle = 5;
  uint32 next_event_id = 6;
  message Option {
    uint32 id = 1;
    protos.NewSandboxEvent.Option.Status status = 2;
    enum Status {
      None = 0;
      Visible = 1;
      Selectable = 2;
    }
  }
  message Battle {
    uint32 battle_id = 1;
    uint32 result_id = 2;
  }
}

message NewSandboxInfo {
  uint32 phase = 1;
  bool is_change_phase = 2;
  bool is_end = 3;
  uint32 ending_id = 4;
  uint32 system = 5;
  protos.NewSandboxInfo.Chapter chapter = 6;
  protos.NewSandboxCustomEventParams custom_event_params = 7;
  bool is_force_change_phase = 8;
  message Chapter {
    uint32 id = 1;
    bool is_end = 2;
  }
}

message NewSandboxCustomEventParams {
  bool is_stop = 1;
  bool is_refreshed = 2;
  bool refresh_now = 3;
}

message NewSandboxEventTriggerParams {
  uint32 option_id = 1;
  string scenario_data = 2;
}

message NewSandboxCustomEventTriggerParams {
  uint32 system = 1;
  uint32 id = 2;
}

message NewSandboxEventTriggerResult {
  protos.NewSandboxInfo info = 1;
  protos.NewSandboxEvent event = 2;
  protos.DBTreasurePackage event_treasure = 3;
}

message NewSandboxSaveData {
  uint32 sandbox_id = 1;
  string namespace = 2;
  string name = 3;
  bool is_auto = 4;
  sint32 round = 5;
  uint32 updated_at = 6;
}

message Sandbox2ChangedUnit {
  uint32 id = 1;
  sint32 changed_exp = 2;
  sint32 old_exp = 4;
  uint32 old_level = 6;
  sint32 exp = 7;
  uint32 level = 9;
  protos.db_sandbox2_unit unit = 10;
  uint32 add_unit_skill_id = 11;
}

message Sandbox2Statistic {
  uint32 battle_count = 1;
  uint32 battle_kill_count = 2;
  uint32 battle_death_count = 3;
  uint32 fate_power_used_count = 4;
  uint32 tactics_command_used_count = 5;
  uint32 inference_clue_count = 6;
  uint32 hide_clue_count = 7;
}

message Sandbox2ShopData {
  repeated protos.Sandbox2ShopData.SaleItem sale_items = 1;
  message Treasure {
    uint32 type = 1;
    sint32 param0 = 2;
    sint32 param1 = 3;
  }
  message SaleItem {
    uint32 id = 1;
    protos.Sandbox2ShopData.Treasure item = 2;
    protos.DBConsume consume = 3;
    sint32 quantity = 4;
    bool is_get = 5;
  }
}

message Sandbox2NewRoundDataSync {
  repeated protos.db_sandbox2_shop shops = 1;
  protos.db_sandbox2_capital capital = 2;
}
